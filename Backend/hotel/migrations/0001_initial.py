# Generated by Django 4.1.4 on 2023-07-07 16:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('residence_status', models.CharField(choices=[('SPACE', 'Space'), ('FULL', 'Full'), ('PROBLEM', 'Problem')], default='SPACE', max_length=15)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('star', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('room_count', models.PositiveSmallIntegerField(default=100)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'ordering': ['-star'],
            },
        ),
        migrations.CreateModel(
            name='HotelAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must not consist of space and requires country code. eg : 989210000000', regex='^[1-9][0-9]{8,14}$')])),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HotelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('capacity', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('INITIAL', 'Initial'), ('FREE', 'Free'), ('RESERVED', 'Reserved'), ('PROBLEM', 'Problem')], default='FREE', max_length=15)),
                ('price', models.PositiveBigIntegerField(blank=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('room_avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='hotel.hotel')),
            ],
            options={
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='HotelReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('guests', models.PositiveSmallIntegerField()),
                ('reserved_status', models.CharField(choices=[('INITIAL', 'Initial'), ('RESERVED', 'Reserved'), ('CANCELLED', 'Cancelled'), ('FINISHED', 'Finished'), ('PROBLEM', 'Problem')], default='INITIAL', max_length=15)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservation', to='hotel.hotelroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HotelRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate', to='hotel.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HotelPassenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passenger_code', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('reserved_key', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must not consist of space and requires country code. eg : 989210000000', regex='^[1-9][0-9]{8,14}$')])),
                ('birth_day', models.DateField()),
                ('national_id', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('passenger_type', models.CharField(choices=[('ADULT', 'Adult'), ('CHILDREN', 'Children')], default='ADULT', max_length=20)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('stay_status', models.CharField(choices=[('INITIAL', 'Initial'), ('RESERVED', 'Reserved'), ('FINISHED', 'Finished'), ('CANCELLED', 'Cancelled')], default='INITIAL', max_length=20)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='hotel.hotelroom')),
            ],
            options={
                'ordering': ['-created_time'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hotel',
            name='address',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='hotel_address', to='hotel.hoteladdress'),
        ),
        migrations.AddConstraint(
            model_name='hotelroom',
            constraint=models.UniqueConstraint(fields=('hotel', 'number'), name='unique_hotel_number_seat'),
        ),
        migrations.AddConstraint(
            model_name='hotelreservation',
            constraint=models.UniqueConstraint(condition=models.Q(('reserved_status__in', ['INITIAL', 'RESERVED'])), fields=('user', 'room'), name='unique_user_hotel_room'),
        ),
        migrations.AddConstraint(
            model_name='hotelrating',
            constraint=models.UniqueConstraint(fields=('hotel', 'user', 'rate'), name='unique_hotel_user_rate'),
        ),
        migrations.AddConstraint(
            model_name='hotel',
            constraint=models.UniqueConstraint(fields=('name', 'residence_status'), name='unique_hotel_name_residence_status'),
        ),
    ]
